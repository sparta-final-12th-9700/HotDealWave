version: '3.8'

services:
  eureka-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "19090:19090"
    networks:
      - hotdealnetwork

  gateway-service:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway-service
    ports:
      - "19091:19091"
    environment:
      - ACTIVE_PROFILE=${ACTIVE_PROFILE}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - HOST=${HOST}
    depends_on:
      - eureka-server
    networks:
      - hotdealnetwork

  user-service:
    build:
      context: ./user
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "19092:19092"
    environment:
      - ACTIVE_PROFILE=${ACTIVE_PROFILE}
      # Email
      - EMAIL_SERVICE_USERNAME=${EMAIL_SERVICE_USERNAME}
      - EMAIL_SERVICE_PASSWORD=${EMAIL_SERVICE_PASSWORD}
      # DB
      - PROD_DB_ENDPOINT=${PROD_DB_ENDPOINT}
      - PROD_DB_USERNAME=${PROD_DB_USERNAME}
      - PROD_DB_PASSWORD=${PROD_DB_PASSWORD}
      # Redis
      - REDIS_PROD_HOST=${REDIS_PROD_HOST}
      - REDIS_PROD_PORT=${REDIS_PROD_PORT}
      - REDIS_PROD_USERNAME=${REDIS_PROD_USERNAME}
      - REDIS_PROD_PASSWORD=${REDIS_PROD_PASSWORD}
      # JWT
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - HOST=${HOST}
    depends_on:
      - gateway-service
    networks:
      - hotdealnetwork

  company-service:
    build:
      context: ./company
      dockerfile: Dockerfile
    container_name: company-service
    ports:
      - "19097:19097"
    environment:
      - ACTIVE_PROFILE=${ACTIVE_PROFILE}
      # DB
      - PROD_DB_ENDPOINT=${PROD_DB_ENDPOINT}
      - PROD_DB_USERNAME=${PROD_DB_USERNAME}
      - PROD_DB_PASSWORD=${PROD_DB_PASSWORD}
      - HOST=${HOST}
    depends_on:
      - user-service
    networks:
      - hotdealnetwork

  product-service:
    build:
      context: ./product
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "19093:19093"
    environment:
      - ACTIVE_PROFILE=${ACTIVE_PROFILE}
      # DB
      - PROD_DB_ENDPOINT=${PROD_DB_ENDPOINT}
      - PROD_DB_USERNAME=${PROD_DB_USERNAME}
      - PROD_DB_PASSWORD=${PROD_DB_PASSWORD}
      # Feign
      - ADMIN_USER_ID=${ADMIN_USER_ID}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_ROLE=${ADMIN_ROLE}
      - HOST=${HOST}
      # Kafka
      - PROD_KAFKA_ENDPOINT=${PROD_KAFKA_ENDPOINT}
      - KAFKA_RESTORE_QUANTITY_TOPIC=${KAFKA_RESTORE_QUANTITY_TOPIC}
      - KAFKA_REQUEST_ORDER_TOPIC=${KAFKA_REQUEST_ORDER_TOPIC}
      - KAFKA_REDUCE_QUANTITY_TOPIC=${KAFKA_REDUCE_QUANTITY_TOPIC}
      - KAFKA_REQUEST_PAYMENT_TOPIC=${KAFKA_REQUEST_PAYMENT_TOPIC}
      # ElasticSearch
      - PROD_ELASTICSEARCH_ENDPOINT=${PROD_ELASTICSEARCH_ENDPOINT}
      - PROD_ELASTICSEARCH_PASSWORD=${PROD_ELASTICSEARCH_PASSWORD}
      - PROD_ELASTICSEARCH_USERNAME=${PROD_ELASTICSEARCH_USERNAME}
      # S3
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_REGION=${AWS_REGION}
      - AWS_DOMAIN=${AWS_DOMAIN}

    depends_on:
      - company-service
    networks:
      - hotdealnetwork

  coupon-service:
    build:
      context: ./coupon
      dockerfile: Dockerfile
    container_name: coupon-service
    ports:
      - "19096:19096"
    environment:
      - ACTIVE_PROFILE=${ACTIVE_PROFILE}
      # DB
      - PROD_DB_ENDPOINT=${PROD_DB_ENDPOINT}
      - PROD_DB_USERNAME=${PROD_DB_USERNAME}
      - PROD_DB_PASSWORD=${PROD_DB_PASSWORD}
      # Redis
      - REDIS_PROD_HOST=${REDIS_PROD_HOST}
      - REDIS_PROD_PORT=${REDIS_PROD_PORT}
      - REDIS_PROD_USERNAME=${REDIS_PROD_USERNAME}
      - REDIS_PROD_PASSWORD=${REDIS_PROD_PASSWORD}
      # Feign
      - ADMIN_USER_ID=${ADMIN_USER_ID}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_ROLE=${ADMIN_ROLE}
      - HOST=${HOST}
    depends_on:
      - product-service
    networks:
      - hotdealnetwork

  order-service:
    build:
      context: ./order
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "19094:19094"
    environment:
      - ACTIVE_PROFILE=${ACTIVE_PROFILE}
      # DB
      - PROD_DB_ENDPOINT=${PROD_DB_ENDPOINT}
      - PROD_DB_USERNAME=${PROD_DB_USERNAME}
      - PROD_DB_PASSWORD=${PROD_DB_PASSWORD}
      # Feign
      - ADMIN_USER_ID=${ADMIN_USER_ID}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_ROLE=${ADMIN_ROLE}
      - HOST=${HOST}
      # Kafka
      - PROD_KAFKA_ENDPOINT=${PROD_KAFKA_ENDPOINT}
      - KAFKA_CANCEL_ORDER_TOPIC=${KAFKA_CANCEL_ORDER_TOPIC}
      - KAFKA_CANCEL_PAYMENT_TOPIC=${KAFKA_CANCEL_PAYMENT_TOPIC}
      - KAFKA_DLQ_TOPIC=${KAFKA_DLQ_TOPIC}
      - KAFKA_REFUND_PAYMENT_TOPIC=${KAFKA_REFUND_PAYMENT_TOPIC}
      - KAFKA_REQUEST_PRODUCT_TOPIC=${KAFKA_REQUEST_PRODUCT_TOPIC}
      - KAFKA_UPDATE_ORDER_STATUS_TOPIC=${KAFKA_UPDATE_ORDER_STATUS_TOPIC}
      # Redis
      - REDIS_PROD_HOST=${REDIS_PROD_HOST}
      - REDIS_PROD_PORT=${REDIS_PROD_PORT}
      - REDIS_PROD_USERNAME=${REDIS_PROD_USERNAME}
      - REDIS_PROD_PASSWORD=${REDIS_PROD_PASSWORD}

    depends_on:
      - coupon-service
    networks:
      - hotdealnetwork

  payment-service:
    build:
      context: ./payment
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "19095:19095"
    environment:
      - ACTIVE_PROFILE=${ACTIVE_PROFILE}
      # DB
      - PROD_DB_ENDPOINT=${PROD_DB_ENDPOINT}
      - PROD_DB_USERNAME=${PROD_DB_USERNAME}
      - PROD_DB_PASSWORD=${PROD_DB_PASSWORD}
      # Feign
      - ADMIN_USER_ID=${ADMIN_USER_ID}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_ROLE=${ADMIN_ROLE}
      # Kakao API
      - PAY_KEY=${PAY_KEY}
      - PAY_CID=${PAY_CID}
      - PAY_HOST_DOMAIN=${PAY_HOST_DOMAIN}
      - HOST=${HOST}
      # Kafka
      - PROD_KAFKA_ENDPOINT=${PROD_KAFKA_ENDPOINT}
      - KAFKA_CANCEL_PAYMENT_TOPIC=${KAFKA_CANCEL_PAYMENT_TOPIC}
      - KAFKA_DLQ_TOPIC=${KAFKA_DLQ_TOPIC}
      - KAFKA_READY_PAYMENT_TOPIC=${KAFKA_READY_PAYMENT_TOPIC}
      - KAFKA_REFUND_PAYMENT_TOPIC=${KAFKA_REFUND_PAYMENT_TOPIC}
      - KAFKA_ROLLBACK_REDUCE_QUANTITY_TOPIC=${KAFKA_ROLLBACK_REDUCE_QUANTITY_TOPIC}
      - KAFKA_UPDATE_ORDER_STATUS_TOPIC=${KAFKA_UPDATE_ORDER_STATUS_TOPIC}

    depends_on:
      - order-service
    networks:
      - hotdealnetwork

networks:
  hotdealnetwork:
    external: true
    name: hotdeal-ecommerce_hotdealnetwork