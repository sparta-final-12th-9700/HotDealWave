spring:
  datasource:
    url: jdbc:mysql://${LOCAL_DB_ENDPOINT}/hotdeal_ecommerce_payment
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
  kafka:
    bootstrap-servers: #node들의 주소 (외부 주소)
      - ${LOCAL_KAFKA_HOST}:9092
    consumer:
      group-id: order-group
      auto-offset-reset: earliest # 카프카에서 존재하는 offset중 가장 앞에 있는 것을 가져온다.
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer #객체를 어떤 방식으로 변환할지?
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

eureka:
  client:
    service-url:
      defaultZone: http://localhost:19090/eureka/